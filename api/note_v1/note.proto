syntax = "proto3";

package api.note_v1;

option go_package = "github.com/Journeyman150/note-service-api/pkg/note_v1";

import "google/api/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/timestamp.proto";

service NoteV1 {
    rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse) {
        option (google.api.http) = {
            post: "/note/v1/create"
            body: "*"
        };
    }
    rpc GetNote (GetNoteRequest) returns (GetNoteResponse) {
        option (google.api.http) = {
            get: "/note/v1/get/{id}"
        };
    }
    rpc GetListNote (GetListNoteRequest) returns (GetListNoteResponse);
    rpc Update (UpdateNoteRequest) returns (Empty);
    rpc DeleteNote (DeleteNoteRequest) returns (Empty);
}

message CreateNoteRequest {
    string title = 1 [(validate.rules).string = {min_len: 3, max_len: 100}];
    string text = 2 [(validate.rules).string = {min_len: 10, max_len: 10000}];
    string author = 3 [(validate.rules).string = {min_len: 2, max_len: 100}];
    string email = 4 [(validate.rules).string.email = true];
}

message CreateNoteResponse {
    int64 id = 1;
}

message GetNoteRequest {
    int64 id = 1 [(validate.rules).int64.gte = 1];
}

message GetNoteResponse {
    int64 id = 1;
    string title = 2;
    string text = 3;
    string author = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message GetListNoteRequest {}

message GetListNoteResponse {
    repeated GetNoteResponse notes = 1;
}

message UpdateNoteRequest {
    int64 id = 1;
    string title = 2;
    string text = 3;
    string author = 4;
}

message DeleteNoteRequest {
    int64 id = 1;
}

message Empty {}